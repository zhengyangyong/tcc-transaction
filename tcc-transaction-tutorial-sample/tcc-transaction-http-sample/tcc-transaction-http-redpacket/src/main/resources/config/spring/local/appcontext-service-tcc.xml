<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:redisson="http://redisson.org/schema/redisson" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd   http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://redisson.org/schema/redisson http://redisson.org/schema/redisson/redisson.xsd http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <util:properties id="redis" location="classpath:redis.properties"/>
    <util:properties id="config" location="classpath:config.properties"/>

    <bean class="org.mengyun.tcctransaction.spring.recovery.RecoverConfiguration">
        <property name="transactionRepository" ref="transactionRepository"/>
        <property name="recoverFrequency">
            <bean class="org.mengyun.tcctransaction.recovery.DefaultRecoverFrequency">
                <property name="maxRetryCount" value="30"/>
                <property name="recoverDuration" value="5"/>
                <property name="cronExpression" value="0/5 * * * * ? "/>
                <property name="fetchPageSize" value="200"/>
            </bean>
        </property>
        <property name="recoveryLock" ref="recoveryLock"/>
    </bean>

    <bean id="transactionRepository" class="org.mengyun.tcctransaction.repository.RedisTransactionRepository">
        <property name="jedisPool" ref="jedisPool"/>
        <property name="domain" value="TCC:HTTP:REDPACKET:JEDIS:"/>
    </bean>

    <bean id="recoveryLock" class="org.mengyun.tcctransaction.recovery.RedissonRecoveryLock">
        <property name="lockSuffixName" value="TCC:HTTP:REDPACKET:JEDIS:"/>
        <property name="redissonClient" ref="redissonClient"/>
    </bean>


    <redisson:client id="redissonClient">
        <redisson:single-server
                address="redis://127.0.0.1:6379"
                idle-connection-timeout="10000"
                connect-timeout="1000"
                timeout="300"
                retry-attempts="3"
                retry-interval="0"
                connection-minimum-idle-size="15"
                connection-pool-size="30"
                database="0"
        />
    </redisson:client>


    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="#{redis['redis.pool.maxTotal']}"/>
        <property name="maxIdle" value="#{redis['redis.pool.maxIdle']}"/>
        <property name="minIdle" value="#{redis['redis.pool.minIdle']}"/>
        <property name="maxWaitMillis" value="#{redis['redis.pool.maxWaitMillis']}"/>
    </bean>

    <bean id="jedisPool" class="redis.clients.jedis.JedisPool">
        <constructor-arg name="poolConfig" ref="poolConfig"/>
        <constructor-arg name="host" value="#{redis['singleredis.host']}"/>
        <constructor-arg name="port" value="#{redis['singleredis.port']}"/>
        <constructor-arg name="timeout" value="#{redis['redis.connectionTimeout']}"/>
    </bean>

    <jdbc:embedded-database id="dataSource" type="H2">
        <jdbc:script location="classpath:h2.sql" execution="INIT"/>
    </jdbc:embedded-database>


    <bean id="curator" class="org.mengyun.tcctransaction.ha.zookeeper.CuratorFactory" factory-method="make"
          destroy-method="close">
        <constructor-arg value="#{config['zk.address']}"/>
        <constructor-arg value="#{config['zk.digest:']}"/>
    </bean>

    <bean id="registry" class="org.mengyun.tcctransaction.ha.zookeeper.ZookeeperRegistry">
        <constructor-arg ref="curator"/>
    </bean>

    <bean id="registration" class="org.mengyun.tcctransaction.ha.spring.RegistrationSpringFactory">
        <property name="transactionRepository" ref="transactionRepository"/>
        <property name="owners">
            <list>
                <bean class="org.mengyun.tcctransaction.ha.registry.Owner">
                    <property name="name" value="123"/>
                    <property name="email" value="123@123.com"/>
                </bean>
            </list>
        </property>
        <property name="application" value="tcc-transaction-http-redpacket"/>
    </bean>

    <bean class="org.mengyun.tcctransaction.ha.spring.SpringSmartAutoRegistryService">
        <property name="registry" ref="registry"/>
        <property name="registration" ref="registration"/>
    </bean>


</beans>